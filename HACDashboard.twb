<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1018.1932                               -->
<workbook original-version='18.1' source-build='2018.3.0 (20183.18.1018.1932)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (currentNHSNData)' inline='true' name='federated.0psocvp0oxlaz017zj0cs141e5fj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='currentNHSNData' name='excel-direct.0f1qykd0zyvk7p1d8jfgz1awl5v5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/JDits001/Documents/Projects/HACScorecard/HACScorecardData/tableauNHSNData.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='targetData' name='excel-direct.1azuvad1azgjxo18ei3051yxqnfb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/JDits001/Documents/Projects/HACScorecard/HACScorecardData/targetData.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Sheet1].[Facility]' />
                <expression op='[Targets].[Facility]' />
              </expression>
              <expression op='='>
                <expression op='[Sheet1].[Measure]' />
                <expression op='[Targets].[Measure]' />
              </expression>
              <expression op='='>
                <expression op='[Sheet1].[Procedure]' />
                <expression op='[Targets].[Procedure]' />
              </expression>
            </expression>
          </clause>
          <relation connection='excel-direct.0f1qykd0zyvk7p1d8jfgz1awl5v5' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:Y1273:no:A1:Y1273:0' header='yes' outcome='6'>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='AnthemPoints' ordinal='1' />
              <column datatype='real' name='CUMSUM_DEN3' ordinal='2' />
              <column datatype='integer' name='CUMSUM_NUM3' ordinal='3' />
              <column datatype='date' name='CY' ordinal='4' />
              <column datatype='integer' name='CumAchievementPts' ordinal='5' />
              <column datatype='date' name='Date 1' ordinal='6' />
              <column datatype='real' name='Denominator' ordinal='7' />
              <column datatype='string' name='Facility' ordinal='8' />
              <column datatype='string' name='Measure' ordinal='9' />
              <column datatype='integer' name='Numerator' ordinal='10' />
              <column datatype='real' name='PPTD' ordinal='11' />
              <column datatype='real' name='PPTD_DEN' ordinal='12' />
              <column datatype='integer' name='PPTD_NUM' ordinal='13' />
              <column datatype='real' name='Percentile' ordinal='14' />
              <column datatype='string' name='Procedure' ordinal='15' />
              <column datatype='integer' name='ProjectedDen' ordinal='16' />
              <column datatype='integer' name='ResidualVBP' ordinal='17' />
              <column datatype='real' name='Score' ordinal='18' />
              <column datatype='real' name='Trend_3' ordinal='19' />
              <column datatype='integer' name='Units' ordinal='20' />
              <column datatype='real' name='ZScore' ordinal='21' />
              <column datatype='real' name='cumZScore' ordinal='22' />
              <column datatype='real' name='winCumZScore' ordinal='23' />
              <column datatype='real' name='winZScore' ordinal='24' />
            </columns>
          </relation>
          <relation connection='excel-direct.1azuvad1azgjxo18ei3051yxqnfb' name='Targets' table='[Targets$]' type='table'>
            <columns gridOrigin='A1:G49:no:A1:G49:0' header='yes' outcome='6'>
              <column datatype='string' name='Facility' ordinal='0' />
              <column datatype='string' name='Measure' ordinal='1' />
              <column datatype='string' name='Procedure' ordinal='2' />
              <column datatype='real' name='HAC Target' ordinal='3' />
              <column datatype='real' name='VBP Target' ordinal='4' />
              <column datatype='real' name='Anthem Target' ordinal='5' />
              <column datatype='real' name='STARP Target' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Anthem Target]' value='[Targets].[Anthem Target]' />
          <map key='[AnthemPoints]' value='[Sheet1].[AnthemPoints]' />
          <map key='[CUMSUM_DEN3]' value='[Sheet1].[CUMSUM_DEN3]' />
          <map key='[CUMSUM_NUM3]' value='[Sheet1].[CUMSUM_NUM3]' />
          <map key='[CY]' value='[Sheet1].[CY]' />
          <map key='[CumAchievementPts]' value='[Sheet1].[CumAchievementPts]' />
          <map key='[Date 1]' value='[Sheet1].[Date 1]' />
          <map key='[Date]' value='[Sheet1].[Date]' />
          <map key='[Denominator]' value='[Sheet1].[Denominator]' />
          <map key='[Facility (Targets)]' value='[Targets].[Facility]' />
          <map key='[Facility]' value='[Sheet1].[Facility]' />
          <map key='[HAC Target]' value='[Targets].[HAC Target]' />
          <map key='[Measure (Targets)]' value='[Targets].[Measure]' />
          <map key='[Measure]' value='[Sheet1].[Measure]' />
          <map key='[Numerator]' value='[Sheet1].[Numerator]' />
          <map key='[PPTD]' value='[Sheet1].[PPTD]' />
          <map key='[PPTD_DEN]' value='[Sheet1].[PPTD_DEN]' />
          <map key='[PPTD_NUM]' value='[Sheet1].[PPTD_NUM]' />
          <map key='[Percentile]' value='[Sheet1].[Percentile]' />
          <map key='[Procedure (Targets)]' value='[Targets].[Procedure]' />
          <map key='[Procedure]' value='[Sheet1].[Procedure]' />
          <map key='[ProjectedDen]' value='[Sheet1].[ProjectedDen]' />
          <map key='[ResidualVBP]' value='[Sheet1].[ResidualVBP]' />
          <map key='[STARP Target]' value='[Targets].[STARP Target]' />
          <map key='[Score]' value='[Sheet1].[Score]' />
          <map key='[Trend_3]' value='[Sheet1].[Trend_3]' />
          <map key='[Units]' value='[Sheet1].[Units]' />
          <map key='[VBP Target]' value='[Targets].[VBP Target]' />
          <map key='[ZScore]' value='[Sheet1].[ZScore]' />
          <map key='[cumZScore]' value='[Sheet1].[cumZScore]' />
          <map key='[winCumZScore]' value='[Sheet1].[winCumZScore]' />
          <map key='[winZScore]' value='[Sheet1].[winZScore]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AnthemPoints</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AnthemPoints]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AnthemPoints</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUMSUM_DEN3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CUMSUM_DEN3]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CUMSUM_DEN3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUMSUM_NUM3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CUMSUM_NUM3]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CUMSUM_NUM3</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CY</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CY]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CY</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CumAchievementPts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CumAchievementPts]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CumAchievementPts</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date 1</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date 1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date 1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Denominator</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Denominator]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Denominator</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facility</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Facility]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Facility</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numerator</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Numerator]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Numerator</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPTD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPTD]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PPTD</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPTD_DEN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPTD_DEN]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PPTD_DEN</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPTD_NUM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PPTD_NUM]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PPTD_NUM</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentile</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentile]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percentile</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Procedure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Procedure]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Procedure</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProjectedDen</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProjectedDen]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ProjectedDen</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ResidualVBP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ResidualVBP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ResidualVBP</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trend_3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trend_3]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Trend_3</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Units</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ZScore]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ZScore</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumZScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumZScore]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cumZScore</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winCumZScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[winCumZScore]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>winCumZScore</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winZScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[winZScore]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>winZScore</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>4</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y1273:no:A1:Y1273:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Facility</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Facility (Targets)]</local-name>
            <parent-name>[Targets]</parent-name>
            <remote-alias>Facility</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure (Targets)]</local-name>
            <parent-name>[Targets]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Procedure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Procedure (Targets)]</local-name>
            <parent-name>[Targets]</parent-name>
            <remote-alias>Procedure</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HAC Target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HAC Target]</local-name>
            <parent-name>[Targets]</parent-name>
            <remote-alias>HAC Target</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VBP Target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[VBP Target]</local-name>
            <parent-name>[Targets]</parent-name>
            <remote-alias>VBP Target</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anthem Target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Anthem Target]</local-name>
            <parent-name>[Targets]</parent-name>
            <remote-alias>Anthem Target</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARP Target</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STARP Target]</local-name>
            <parent-name>[Targets]</parent-name>
            <remote-alias>STARP Target</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Targets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G49:no:A1:G49:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj]&quot;' value='Total On Target' />
        </aliases>
      </column>
      <column aggregation='CountD' datatype='real' name='[AnthemPoints]' role='measure' type='quantitative' />
      <column caption='Cumsum Den3' datatype='real' name='[CUMSUM_DEN3]' role='measure' type='quantitative' />
      <column caption='Cumsum Num3' datatype='integer' name='[CUMSUM_NUM3]' role='measure' type='quantitative' />
      <column caption='IsZScoreEqualWinsor' datatype='boolean' name='[Calculation_1196550139351998464]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [ZScore] = [winZScore] THEN TRUE&#13;&#10;ELSE FALSE&#13;&#10;END' />
      </column>
      <column caption='CellBarChart' datatype='integer' name='[Calculation_1196550139353513987]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='PercentileGroups' datatype='string' name='[Calculation_1196550139353632772]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Percentile] &lt;= 0.05 THEN &quot;Top 5%&quot;&#13;&#10;ELSEIF [Percentile] &gt; 0.95 THEN &quot;Bottom 5%&quot;&#13;&#10;ELSEIF Percentile &gt; 0.05 AND [Percentile] &lt;= 0.5 THEN &quot;Top 50%&quot;&#13;&#10;ELSEIF ISNULL([Percentile]) THEN &quot;NA&quot;&#13;&#10;ELSE &quot;Bottom 50%&quot;&#13;&#10;END' />
      </column>
      <column caption='isSSIandNA' datatype='boolean' name='[Calculation_2160320461436080128]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Measure] == &quot;SSI&quot; AND [Procedure] == &quot;NA&quot; THEN True&#13;&#10;ELSE False&#13;&#10;END' />
      </column>
      <column caption='CountTop50' datatype='integer' name='[Calculation_2160320461440593921]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_1196550139353632772] = &quot;Top 5%&quot; or [Calculation_1196550139353632772] = &quot;Top 50%&quot; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pptd' datatype='real' name='[PPTD]' role='measure' type='quantitative' />
      <column caption='Pptd Den' datatype='real' name='[PPTD_DEN]' role='measure' type='quantitative' />
      <column caption='Pptd Num' datatype='integer' name='[PPTD_NUM]' role='dimension' type='ordinal' />
      <column caption='Trend 3' datatype='real' name='[Trend_3]' role='measure' type='quantitative' />
      <column datatype='real' name='[VBP Target]' role='measure' type='quantitative' />
      <column caption='Z Score' datatype='real' name='[ZScore]' role='measure' type='quantitative' />
      <column caption='Cum Z Score' datatype='real' name='[cumZScore]' role='measure' type='quantitative' />
      <column caption='Win Cum Z Score' datatype='real' name='[winCumZScore]' role='measure' type='quantitative' />
      <column caption='Win Z Score' datatype='real' name='[winZScore]' role='measure' type='quantitative' />
      <column-instance column='[PPTD]' derivation='Attribute' name='[attr:PPTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[winCumZScore]' derivation='Attribute' name='[attr:winCumZScore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1196550139353632772]' derivation='Count' name='[cnt:Calculation_1196550139353632772:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1196550139351998464]' derivation='None' name='[none:Calculation_1196550139351998464:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1196550139353632772]' derivation='None' name='[none:Calculation_1196550139353632772:nk]' pivot='key' type='nominal' />
      <column-instance column='[AnthemPoints]' derivation='Sum' name='[sum:AnthemPoints:ok]' pivot='key' type='ordinal' />
      <column-instance column='[PPTD]' derivation='Sum' name='[sum:PPTD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VBP Target]' derivation='Sum' name='[sum:VBP Target:qk]' pivot='key' type='quantitative' />
      <column-instance column='[winZScore]' derivation='Sum' name='[sum:winZScore:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.402878' measure-ordering='alphabetic' measure-percentage='0.597122' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:AnthemPoints:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0.0</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>9.0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>4.0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1196550139353632772:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Top 50\%&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Top 5\%&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bottom 50\%&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bottom 5\%&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:PPTD:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:winCumZScore:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:VBP Target:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1196550139351998464:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:Calculation_1196550139353632772:qk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Top 50\%&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Top 5\%&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bottom 50\%&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bottom 5\%&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='PercentileGrid' />
      <command command='tsc:brush'>
        <param name='field-captions' value='PercentileGroups' />
        <param name='target' value='PercentileGrid' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CountOnTarget'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
          </datasources>
          <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
            <column caption='PercentileGroups' datatype='string' name='[Calculation_1196550139353632772]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Percentile] &lt;= 0.05 THEN &quot;Top 5%&quot;&#13;&#10;ELSEIF [Percentile] &gt; 0.95 THEN &quot;Bottom 5%&quot;&#13;&#10;ELSEIF Percentile &gt; 0.05 AND [Percentile] &lt;= 0.5 THEN &quot;Top 50%&quot;&#13;&#10;ELSEIF ISNULL([Percentile]) THEN &quot;NA&quot;&#13;&#10;ELSE &quot;Bottom 50%&quot;&#13;&#10;END' />
            </column>
            <column caption='CountTop50' datatype='integer' name='[Calculation_2160320461440593921]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_1196550139353632772] = &quot;Top 5%&quot; or [Calculation_1196550139353632772] = &quot;Top 50%&quot; THEN 1&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
            <column datatype='real' name='[Percentile]' role='measure' type='quantitative' />
            <column datatype='string' name='[Procedure]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1196550139353632772]' derivation='None' name='[none:Calculation_1196550139353632772:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Procedure]' derivation='None' name='[none:Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2160320461440593921]' derivation='Sum' name='[sum:Calculation_2160320461440593921:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1196550139353632772:nk]' member='&quot;Top 5\%&quot;' />
              <groupfilter function='member' level='[none:Calculation_1196550139353632772:nk]' member='&quot;Top 50\%&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:ok]' filter-group='9'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2019-06-01#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' filter-group='4'>
            <groupfilter from='&quot;SV Anderson&quot;' function='range' level='[none:Facility:nk]' to='&quot;SV Kokomo&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;NA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:ok]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]' value='157' />
            <format attr='height' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Calculation_2160320461440593921:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='DataTable'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
          </datasources>
          <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
            <column caption='PercentileGroups' datatype='string' name='[Calculation_1196550139353632772]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Percentile] &lt;= 0.05 THEN &quot;Top 5%&quot;&#13;&#10;ELSEIF [Percentile] &gt; 0.95 THEN &quot;Bottom 5%&quot;&#13;&#10;ELSEIF Percentile &gt; 0.05 AND [Percentile] &lt;= 0.5 THEN &quot;Top 50%&quot;&#13;&#10;ELSEIF ISNULL([Percentile]) THEN &quot;NA&quot;&#13;&#10;ELSE &quot;Bottom 50%&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Denominator]' role='measure' type='quantitative' />
            <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
            <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Numerator]' role='measure' type='quantitative' />
            <column caption='Pptd' datatype='real' name='[PPTD]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percentile]' role='measure' type='quantitative' />
            <column datatype='string' name='[Procedure]' role='dimension' type='nominal' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column caption='Z Score' datatype='real' name='[ZScore]' role='measure' type='quantitative' />
            <column caption='Cum Z Score' datatype='real' name='[cumZScore]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1196550139353632772]' derivation='None' name='[none:Calculation_1196550139353632772:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Procedure]' derivation='None' name='[none:Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Denominator]' derivation='Sum' name='[sum:Denominator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Numerator]' derivation='Sum' name='[sum:Numerator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPTD]' derivation='Sum' name='[sum:PPTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentile]' derivation='Sum' name='[sum:Percentile:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ZScore]' derivation='Sum' name='[sum:ZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cumZScore]' derivation='Sum' name='[sum:cumZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winCumZScore]' derivation='Sum' name='[sum:winCumZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winZScore]' derivation='Sum' name='[sum:winZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column caption='Win Cum Z Score' datatype='real' name='[winCumZScore]' role='measure' type='quantitative' />
            <column caption='Win Z Score' datatype='real' name='[winZScore]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Score:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Percentile:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Score:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Percentile:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 5\%&quot;</bucket>
              <bucket>&quot;Top 50\%&quot;</bucket>
              <bucket>&quot;Bottom 50\%&quot;</bucket>
              <bucket>&quot;Bottom 5\%&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' filter-group='6' included-values='in-range'>
            <min>#2018-08-16#</min>
            <max>#2019-06-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Facility:nk]' member='&quot;SV Evansville&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' filter-group='5'>
            <groupfilter from='&quot;CAUTI&quot;' function='range' level='[none:Measure:nk]' to='&quot;SSI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]' filter-group='7'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;FALSE&quot;' />
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:cumZScore:qk]' />
              <text column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk] / [federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names])</rows>
        <cols>[federated.0psocvp0oxlaz017zj0cs141e5fj].[tmn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
          </datasources>
          <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
            <column caption='CellBarChart' datatype='integer' name='[Calculation_1196550139353513987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='PercentileGroups' datatype='string' name='[Calculation_1196550139353632772]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Percentile] &lt;= 0.05 THEN &quot;Top 5%&quot;&#13;&#10;ELSEIF [Percentile] &gt; 0.95 THEN &quot;Bottom 5%&quot;&#13;&#10;ELSEIF Percentile &gt; 0.05 AND [Percentile] &lt;= 0.5 THEN &quot;Top 50%&quot;&#13;&#10;ELSEIF ISNULL([Percentile]) THEN &quot;NA&quot;&#13;&#10;ELSE &quot;Bottom 50%&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
            <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
            <column datatype='real' name='[Percentile]' role='measure' type='quantitative' />
            <column datatype='string' name='[Procedure]' role='dimension' type='nominal' />
            <column-instance column='[winCumZScore]' derivation='Attribute' name='[attr:winCumZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1196550139353632772]' derivation='None' name='[none:Calculation_1196550139353632772:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Procedure]' derivation='None' name='[none:Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1196550139353513987]' derivation='Sum' name='[sum:Calculation_1196550139353513987:qk]' pivot='key' type='quantitative' />
            <column caption='Win Cum Z Score' datatype='real' name='[winCumZScore]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 5\%&quot;</bucket>
              <bucket>&quot;Top 50\%&quot;</bucket>
              <bucket>&quot;Bottom 50\%&quot;</bucket>
              <bucket>&quot;Bottom 5\%&quot;</bucket>
              <bucket>&quot;NA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:ok]' filter-group='9'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2019-06-01#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' filter-group='4'>
            <groupfilter from='&quot;SV Anderson&quot;' function='range' level='[none:Facility:nk]' to='&quot;SV Kokomo&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;NA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:ok]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' />
              <size column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Calculation_1196550139353513987:qk]' />
              <text column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:winCumZScore:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.94453036785125732' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk] / [federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk])</rows>
        <cols>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PPTDByTime'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
          </datasources>
          <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
            <column caption='isSSIandNA' datatype='boolean' name='[Calculation_2160320461436080128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Measure] == &quot;SSI&quot; AND [Procedure] == &quot;NA&quot; THEN True&#13;&#10;ELSE False&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Denominator]' role='measure' type='quantitative' />
            <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
            <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Numerator]' role='measure' type='quantitative' />
            <column caption='Pptd' datatype='real' name='[PPTD]' role='measure' type='quantitative' />
            <column datatype='string' name='[Procedure]' role='dimension' type='nominal' />
            <column datatype='real' name='[VBP Target]' role='measure' type='quantitative' />
            <column caption='Z Score' datatype='real' name='[ZScore]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2160320461436080128]' derivation='None' name='[none:Calculation_2160320461436080128:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Procedure]' derivation='None' name='[none:Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Denominator]' derivation='Sum' name='[sum:Denominator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Numerator]' derivation='Sum' name='[sum:Numerator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPTD]' derivation='Sum' name='[sum:PPTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VBP Target]' derivation='Sum' name='[sum:VBP Target:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ZScore]' derivation='Sum' name='[sum:ZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winCumZScore]' derivation='Sum' name='[sum:winCumZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winZScore]' derivation='Sum' name='[sum:winZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column caption='Win Cum Z Score' datatype='real' name='[winCumZScore]' role='measure' type='quantitative' />
            <column caption='Win Z Score' datatype='real' name='[winZScore]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]'>
            <groupfilter function='member' level='[none:Calculation_2160320461436080128:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' filter-group='6' included-values='in-range'>
            <min>#2018-08-16#</min>
            <max>#2019-06-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Facility:nk]' member='&quot;SV Evansville&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' filter-group='5'>
            <groupfilter from='&quot;CAUTI&quot;' function='range' level='[none:Measure:nk]' to='&quot;SSI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;COLO&quot;' />
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;FALSE&quot;' />
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;HYST&quot;' />
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:VBP Target:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:VBP Target:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
                <format attr='mark-color' value='#ffbe7d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk] / [federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]) * ([federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk] + [federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:VBP Target:qk]))</rows>
        <cols>[federated.0psocvp0oxlaz017zj0cs141e5fj].[tmn:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='PercentileGrid'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
          </datasources>
          <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
            <column caption='CellBarChart' datatype='integer' name='[Calculation_1196550139353513987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='PercentileGroups' datatype='string' name='[Calculation_1196550139353632772]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Percentile] &lt;= 0.05 THEN &quot;Top 5%&quot;&#13;&#10;ELSEIF [Percentile] &gt; 0.95 THEN &quot;Bottom 5%&quot;&#13;&#10;ELSEIF Percentile &gt; 0.05 AND [Percentile] &lt;= 0.5 THEN &quot;Top 50%&quot;&#13;&#10;ELSEIF ISNULL([Percentile]) THEN &quot;NA&quot;&#13;&#10;ELSE &quot;Bottom 50%&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
            <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
            <column datatype='real' name='[Percentile]' role='measure' type='quantitative' />
            <column datatype='string' name='[Procedure]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1196550139353513987]' derivation='Min' name='[min:Calculation_1196550139353513987:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='MY' name='[my:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1196550139353632772]' derivation='None' name='[none:Calculation_1196550139353632772:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Procedure]' derivation='None' name='[none:Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percentile]' derivation='Sum' name='[sum:Percentile:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[my:Date:ok]'>
            <groupfilter function='member' level='[my:Date:ok]' member='201906' />
            <preset type='last-values' />
          </filter>
          <filter class='quantitative' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' filter-group='6' included-values='in-range'>
            <min>#2018-08-16#</min>
            <max>#2019-06-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Facility:nk]' member='&quot;SV Evansville&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' filter-group='5'>
            <groupfilter from='&quot;CAUTI&quot;' function='range' level='[none:Measure:nk]' to='&quot;SSI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]' filter-group='7'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;FALSE&quot;' />
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[my:Date:ok]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' value='125' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' value='56' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' />
              <size column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[min:Calculation_1196550139353513987:qk]' />
              <text column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Percentile:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</rows>
        <cols>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='VBPDataTable'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
          </datasources>
          <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
            <column aggregation='CountD' datatype='real' name='[AnthemPoints]' role='measure' type='quantitative' />
            <column caption='PercentileGroups' datatype='string' name='[Calculation_1196550139353632772]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Percentile] &lt;= 0.05 THEN &quot;Top 5%&quot;&#13;&#10;ELSEIF [Percentile] &gt; 0.95 THEN &quot;Bottom 5%&quot;&#13;&#10;ELSEIF Percentile &gt; 0.05 AND [Percentile] &lt;= 0.5 THEN &quot;Top 50%&quot;&#13;&#10;ELSEIF ISNULL([Percentile]) THEN &quot;NA&quot;&#13;&#10;ELSE &quot;Bottom 50%&quot;&#13;&#10;END' />
            </column>
            <column caption='isSSIandNA' datatype='boolean' name='[Calculation_2160320461436080128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Measure] == &quot;SSI&quot; AND [Procedure] == &quot;NA&quot; THEN True&#13;&#10;ELSE False&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[CumAchievementPts]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Denominator]' role='measure' type='quantitative' />
            <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
            <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Numerator]' role='measure' type='quantitative' />
            <column caption='Pptd' datatype='real' name='[PPTD]' role='measure' type='quantitative' />
            <column datatype='real' name='[Percentile]' role='measure' type='quantitative' />
            <column datatype='string' name='[Procedure]' role='dimension' type='nominal' />
            <column datatype='integer' name='[ResidualVBP]' role='measure' type='quantitative' />
            <column-instance column='[AnthemPoints]' derivation='Attribute' name='[attr:AnthemPoints:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CumAchievementPts]' derivation='Attribute' name='[attr:CumAchievementPts:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPTD]' derivation='Attribute' name='[attr:PPTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ResidualVBP]' derivation='Attribute' name='[attr:ResidualVBP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1196550139353632772]' derivation='None' name='[none:Calculation_1196550139353632772:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2160320461436080128]' derivation='None' name='[none:Calculation_2160320461436080128:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Procedure]' derivation='None' name='[none:Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Denominator]' derivation='Sum' name='[sum:Denominator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Numerator]' derivation='Sum' name='[sum:Numerator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:PPTD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:CumAchievementPts:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:ResidualVBP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:AnthemPoints:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:PPTD:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:CumAchievementPts:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:ResidualVBP:qk]&quot;</bucket>
              <bucket>&quot;[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:AnthemPoints:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Top 5\%&quot;</bucket>
              <bucket>&quot;Top 50\%&quot;</bucket>
              <bucket>&quot;Bottom 50\%&quot;</bucket>
              <bucket>&quot;Bottom 5\%&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]'>
            <groupfilter function='member' level='[none:Calculation_2160320461436080128:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' filter-group='6' included-values='in-range'>
            <min>#2018-08-16#</min>
            <max>#2019-06-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Facility:nk]' member='&quot;SV Evansville&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' filter-group='5'>
            <groupfilter from='&quot;CAUTI&quot;' function='range' level='[none:Measure:nk]' to='&quot;SSI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]' value='31' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' />
              <text column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk] / ([federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk] / [federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]))</rows>
        <cols>[federated.0psocvp0oxlaz017zj0cs141e5fj].[tmn:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='ZScoreByTime'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
          </datasources>
          <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
            <column caption='IsZScoreEqualWinsor' datatype='boolean' name='[Calculation_1196550139351998464]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [ZScore] = [winZScore] THEN TRUE&#13;&#10;ELSE FALSE&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Denominator]' role='measure' type='quantitative' />
            <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
            <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Numerator]' role='measure' type='quantitative' />
            <column caption='Pptd' datatype='real' name='[PPTD]' role='measure' type='quantitative' />
            <column datatype='string' name='[Procedure]' role='dimension' type='nominal' />
            <column caption='Z Score' datatype='real' name='[ZScore]' role='measure' type='quantitative' />
            <column-instance column='[winCumZScore]' derivation='Attribute' name='[attr:winCumZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1196550139351998464]' derivation='None' name='[none:Calculation_1196550139351998464:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Procedure]' derivation='None' name='[none:Procedure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Denominator]' derivation='Sum' name='[sum:Denominator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Numerator]' derivation='Sum' name='[sum:Numerator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PPTD]' derivation='Sum' name='[sum:PPTD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ZScore]' derivation='Sum' name='[sum:ZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winCumZScore]' derivation='Sum' name='[sum:winCumZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winZScore]' derivation='Sum' name='[sum:winZScore:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column caption='Win Cum Z Score' datatype='real' name='[winCumZScore]' role='measure' type='quantitative' />
            <column caption='Win Z Score' datatype='real' name='[winZScore]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' filter-group='6' included-values='in-range'>
            <min>#2018-08-16#</min>
            <max>#2019-06-01#</max>
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Facility:nk]' member='&quot;SV Evansville&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' filter-group='5'>
            <groupfilter from='&quot;CAUTI&quot;' function='range' level='[none:Measure:nk]' to='&quot;SSI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]' filter-group='7'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;FALSE&quot;' />
              <groupfilter function='member' level='[none:Procedure:nk]' member='&quot;NA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</column>
            <column>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:winCumZScore:qk]' scope='rows' value='Z Score (Lower = Better)' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139351998464:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:winCumZScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139351998464:nk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Numerator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:Denominator:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winCumZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:PPTD:qk]' />
              <tooltip column='[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:ZScore:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk] * ([federated.0psocvp0oxlaz017zj0cs141e5fj].[attr:winCumZScore:qk] + [federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:winZScore:qk]))</rows>
        <cols>[federated.0psocvp0oxlaz017zj0cs141e5fj].[tmn:Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='HAC Scorecard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
      </datasources>
      <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
        <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='65334' id='13' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='65334' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='65334' id='5' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='65334' id='1' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='65334' id='3' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                    <zone h='65334' id='6' type='layout-basic' w='98400' x='800' y='1000'>
                      <zone h='8750' id='7' type='title' w='22500' x='800' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='56584' id='34' name='ZScoreByTime' show-title='false' w='98400' x='800' y='9750'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='8750' id='33' name='DataTable' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='46000' x='53200' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='8750' id='35' mode='checkdropdown' name='ZScoreByTime' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' show-all='false' type='filter' w='15800' x='37400' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='8750' id='36' mode='dropdown' name='ZScoreByTime' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' show-all='false' type='filter' w='14100' x='23300' y='1000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='32666' id='23' param='horz' type='layout-flow' w='25300' x='800' y='66334'>
            <zone fixed-size='195' h='32666' id='24' is-fixed='true' param='vert' type='layout-flow' w='25300' x='800' y='66334'>
              <zone fixed-size='137' h='18125' id='20' is-fixed='true' name='PercentileGrid' show-title='false' w='25300' x='800' y='66334'>
                <layout-cache fixed-size-w='182' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='59' h='8375' id='26' is-fixed='true' leg-item-layout='grid' name='DataTable' pane-specification-id='0' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' type='color' w='25300' x='800' y='84459'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6166' id='37' name='ZScoreByTime' pane-specification-id='2' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139351998464:nk]' type='color' w='25300' x='800' y='92834'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='32666' id='25' name='DataTable' show-title='false' w='73100' x='26100' y='66334'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='VBP Performance'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sheet1 (currentNHSNData)' name='federated.0psocvp0oxlaz017zj0cs141e5fj' />
      </datasources>
      <datasource-dependencies datasource='federated.0psocvp0oxlaz017zj0cs141e5fj'>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Facility]' role='dimension' type='nominal' />
        <column datatype='string' name='[Measure]' role='dimension' type='nominal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Facility]' derivation='None' name='[none:Facility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Measure]' derivation='None' name='[none:Measure:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6500' id='15' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='6500' id='14' type='title' w='25300' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='8' mode='dropdown' name='PPTDByTime' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' show-all='false' type='filter' w='16800' x='26100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='7' mode='checkdropdown' name='PPTDByTime' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' show-all='false' type='filter' w='16800' x='42900' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='6' name='PPTDByTime' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='39500' x='59700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='91500' id='11' type='layout-basic' w='98400' x='800' y='7500'>
              <zone h='67500' id='5' param='horz' type='layout-flow' w='98400' x='800' y='7500'>
                <zone h='67500' id='3' type='layout-basic' w='98400' x='800' y='7500'>
                  <zone h='67500' id='1' name='PPTDByTime' show-title='false' w='98400' x='800' y='7500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='24000' id='9' name='VBPDataTable' show-title='false' w='82400' x='16800' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24000' id='10' name='VBPDataTable' pane-specification-id='0' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' type='color' w='16000' x='800' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='ZScoreByTime' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' show-all='false' type='filter' />
            <card mode='dropdown' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' show-all='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139351998464:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139351998464:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:F1:qk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:Date:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B967FA4B-74E4-4129-8F5B-C3126A313E71}' />
    </window>
    <window class='worksheet' name='PercentileGrid' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[my:Date:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[my:F1:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B2A544A-8BBC-4740-A8B0-B8AED8FF7982}' />
    </window>
    <window class='worksheet' name='DataTable' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:Date:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12D46F5C-1221-42D6-87C1-04A0F23EB63F}' />
    </window>
    <window class='dashboard' maximized='true' name='HAC Scorecard' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='DataTable'>
          <highlight field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='PercentileGrid'>
          <highlight field='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='ZScoreByTime'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FCAA6580-64E7-4685-AD47-0172E159E8C4}' />
    </window>
    <window class='worksheet' name='PPTDByTime' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]' show-all='false' type='filter' />
            <card mode='dropdown' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139351998464:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:qk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:F1:qk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:Date:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AF1FF9E-4BDF-44D6-AEAB-4C8435D7292E}' />
    </window>
    <window class='worksheet' name='VBPDataTable' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[:Measure Names]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:Date:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[yr:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C9DB7A4-CC78-4434-A11B-85F2FAB26D07}' />
    </window>
    <window class='dashboard' name='VBP Performance' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='PPTDByTime'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='VBPDataTable'>
          <highlight>
            <color-one-way>
              <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{128853F5-7C55-4458-B79D-6D4037637F3A}' />
    </window>
    <window class='worksheet' name='Overview' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC97A332-D192-4F6D-8E66-FA7DAB8F9993}' />
    </window>
    <window class='worksheet' name='CountOnTarget' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_1196550139353632772:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Calculation_2160320461436080128:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Date:ok]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Facility:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Measure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[none:Procedure:nk]</field>
            <field>[federated.0psocvp0oxlaz017zj0cs141e5fj].[sum:cumZScore:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF75D6C2-8735-40BB-9EBE-E84756D3680B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='80' name='CountOnTarget' width='161'>
      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
      KJSTCIVy/wVmpqgoOVZxlAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DataTable' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WY8kWXqm99ju5vsSe0ZkZmVl7d1kN5vSiJyRRtKVdCVAwEAQoB/DHzLQ
      lSBAEKSb0QjiXOiCHJIzJLu7KveIjNVj8fDdfLHd7BxdmEdUZXelm1ezoqhmxXsV8PDPj7n5
      OXbO+73fokgpJfe4x48U6j/2BdzjHv+YuF8A9/hR434B3OOfBK4v3nJ6OeSXf/u3pN881CcB
      zjygfX7+zvtfPHtG6o/Rf9jLvMc97ga9gcPUveT0eIBEEKsFAucSLfHpsIsdXNIdTalqCVdj
      j3b7nE/3Kij3JPge/xRwfLTP9XWfQrEKqU+kFKgWNYim9N0irboFgEnM1chjrVnji73G78cC
      uLlERVH+ka/kHv/U8HvBAVzX5fdgnd7j9xC/Fwvgm0jmfS5HHgDnZ+3b1wedNn/z919ydrTP
      y/2j37KbDy94tt/+rde/CcdxvuVVycuvfsnZZfe33pu3JNPI5W/+6t9z2Z/8ls1Z+zzXXqQx
      f/fLX9E+O89557vott/yl3/9H/GiZMm7Is7POt/6n7Pz5ffpfTh++/L23vuTLt1puLLtyy//
      Fmc64+9+/fy3/nfePkcAaeTzd//hr+k57jv/D6YDfvXi4J3XJs6Y03abJJjxH/76r7i4uOAv
      /+MvSX/jQfp7R4ITd8RfPDvh548bjHsDhuMRpmnx0Qe7TF4cIWIXVQCffPiO3ev9U8ZhiqmG
      yCSk17lCMW0217e4urzAqjY5PXjOf/+v/kcKhvYNS8l0MkHRTf71v/k/+OCTT0mFxnjQ4cnj
      XX716owvPtxhNg+ob+zwJ3/8h7eW7Zcv2fvpf8Krv/y/OKjs0e0c8slHn9AfzhAEHJ+e0z99
      ztr2LmrzKf/lLz5555plGvP29VcMtj7k6vyYVKaYZonheMzAjXlY03ADydaHn/Pzzz64tXOG
      PT54uMef/9t/Q9/x+OmnH1DQJX/z5Vt+8ukHeHOPSqNM76TH0P0Dfvb5R++Me9E+5C/+/P9m
      69OfEXtzHj58iK4pXB58hVmqMddbbJdSTLvJ559+fZ8vLy9Y23nK//6//GtqzRZOXMC2LT7a
      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
    </thumbnail>
    <thumbnail height='192' name='HAC Scorecard' width='192'>
      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
      wrMdhEcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PPTDByTime' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='PercentileGrid' width='185'>
      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
      nv8D7PvklNtUbxYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='VBP Performance' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='VBPDataTable' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ZScoreByTime' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d53Nk2Xmfnxs7I6cBBmHCTt6djbO7FMWluBKTSKWlxC1Zlkpy2dQHlaWy
      /E/4k6tcZctBKln+YEuiyKIo0kvKG7ncHGZ3dhIGE4BBzkDnvuEcf7jdGGAH2Blg5l40gPNU
      ofp290Wf09331++J70+TUkoUij2Kvt0VUCi2EyUAxZ5GCUCxp1ECUOxplAAUexoTQA0EKfYq
      Zu0gn89vZz1WKBaLJJPJ7a6GYo9gAmiaRiaT2e66rLCVutSimKZp97s6inpCSsqOhyckyZiF
      rt/b923e+ZR7Y3ZylOujk2hIWrt6OdTXfds5M5NjLBU9jhwa2FohUuJ+8NdgxrEf/t17q7Ci
      bpFSMjE1y8QL/4FBcZixxIMYhk5bQ4Ku1gwDXY30djSSiJkY+t11b0MXQFNbF23ZPO09A8Rj
      6xcXj8dpjpkIIRBC4HnepsuRRhyM2Jb+V7Ez+PDKJG98fJ3vPNDL6b5H0XseQ0pYyJYYnc1y
      ZXSeV88Oky06gKQlE2dfa5rejkb6OhpJxW+PGFoUSyHee+0FhqYEv/3tX8Va5/nR4WsIM0n/
      /n3kcrm6ao4pth8pJS+8c5Wx2Sx/+LWHsUzjjv8jhGQxFwhjZGqZibksuZKDEJL2piQ9bQ0c
      6mkOPwIAJFJpdLJs1FrrHTgURTUUOxDfF/zNTz+mMRXn33zzsbv+P13XaG1M0tqY5OHDXSuP
      rxbGuWsz4QtA+A7Zksah/k5E2IUpdhXFistf/OA9Pneql6dP9t6X1/y0MCKIABpOxaGpuXXD
      CKBQfJq5pSL/9Yfv8/yzpzjc0xJaOaELQAqPQi7LcmMrd265KRRwdWyBv3/lAt/5tcdob0qF
      WlboSyEMK0FzRmd4aAw37MIUOxopJW9fGOOHbwzyp7/9ZOgXP0QQAZxSFivTgp7LY4ddmGLH
      IqTkn964wny2yJ88dwb7LkZ67gehR4DhC5cZn5ijIW5TCrswxY7E8wV/+aMPMXSNP/zaw5Fd
      /BBBBOg9dhQamtCNGPGwC1PsOPIlh7/4wft88ZF+Hj/aHflSltAFkEg34jkjgFp7rVjL5HyO
      v/rxWf7FrzzIgX3N21KHSCbCWlvboypKsUO4fHOOH7x+mT/+tcdpa9q+1b+RXJVCCDr3tSFB
      zQXscaSUvPHJKO9eHudPv/Ukidh6i2OiI5JWSXF5hjfeOatmgvc4Qki+/7NL3JhcrIuLHyIS
      wNT4KKPXJ1DrNPcujuvz3374PqmEze99+aG7Xq4cNmuaQJXcIlfHZxjo6WBkKktzyqYlaTGR
      rzA7OU3/gT4629o2XUhLezvFmKHmAfYoS/kyf/mjD3n2sQM88sC+7a7OGtYIYHE5z6HDh5m4
      epm5xQJJqwPH8Glq78KQEuFu7TdcCCguL+PBusuhZyZGKUuLvp6udZ5V7GTGZrP8zU8+4vd+
      5SH6u5q2uzq3sUYAnfs6uXr9Ok0d+3lyv0bB9Zicz3K4Q8dsakTfYthqbGrBmi5s+HxFaGjS
      RQiB7/uUSiU0TUMIsTIuLKVcc6zrOlLK+34sRNBTWX1sGAa+70dyvF4dNE1b83ncy/F6n2VY
      n+uF4Vl++t4N/tXXHqIhaVMsFuvms6y97zUC0AybBx54YOV+DGhpDlbi3csmlYXFJUx949k9
      Q7iUsdF1HcMwSCQSWy5Lsf1IKXnl7DCXRmb5829/jphdv0PgEc0DtLCYFxsOgXb3HYiiGooI
      8HzB9392CV9I/vjXH6+bzu5GhC6A5dlJrt2cZGFqAUdKTJW1YddSqrj81Y/Pcry/jS89emBH
      ZOgIXZ7FUol4PE7PgW5uXh8NuzjFNrGYK/GfvvcuXzjdz7OPHdwRFz9EtCnedSp4QiMet+84
      E6w2xe88RqaW+F//fI4/+vrD9LQ1bHd1NkUkfYB3X/spw9Ma3/q9bxILqQzPFwxPLiEBy9Qx
      dA1D1zGN4Ng0DWoZMYKRANCrIwJQO771nIZ2z0mXdjtSSj66OsVLH9zgT597koZUWN9ueEQi
      gIGjp+g8ZIV28QM4ns/FkVl8X+D6At8X+ELi+qI6vCrxRRDshJQIIdG0YHoeQBI8JqH6XDBU
      JlYFSCnB0LUV4Rh6cGsawa2ua5iGjgYYhh48pgWP6RqBGA0dXdewqs9bplEVq4ZpGOg6WIaB
      Vn2t4DwwDaN6TlXcho5l6mgEggUtEHhNxNQEvVbM90vcQkpe+uAGNyYX+ZPfOkO8jkd6PotI
      mkAXP3yLBSfO0089csd9wTuhCeT5AikDQflCIGWQvkMS3IqqcHwhkeLWeb6Qwf8KiVMVqVj1
      nOv5CCnxfInn+QgJrucjZfB/tddxvaAs1/NXBFwTqu9LdB18IdG4dRvUKah/7SsXUqJr2sqt
      L+SKqPWq0HUtEDMyELBWvZ8rOvS0ZfitLxzf0ZEyEtm6QqOwvIiAXbEx3jSCsYPtX8oVDp4f
      TB75flXcQqxETUlw39R1GlKxHdPZ3YhIBKDrOrpuqKXQO4SawGu3u5nQ36GUEtu2MSLc5xkl
      otp02Q6HBSkljutH7u+wXeWGQegCmBi6RNmXZAvlbblIwuaFd4b46xc+Qoro390Hg5P8xT++
      z1K+Emm5ozNZ/vMP3uPq+GKk5YZB6AJo7uyg7JuceeT4rmj/f5r+zkYGuprYjqbwvtY0fR0N
      JOPRjsA0peP0tjfQ2rDz12yFPgo0P36TgpGiQRekOtrv2HHcCaNAit1D6BFgeXaZhfkxXnrx
      9Q0zw81MjnF9ZCzsqigUtxF6BJBSgqYhfB/duH0kaHpynGQqTb7ksq+zTUUARaSE3nisjRMb
      xvo9gM59PVwfuoyRaLwnhxiFYitoMkC5RCr2JLvGJVKh2AoRTPVJKuUShWJpw3kAp1KmWIp2
      LFuhgAj6ABM3bzA+s0QyZmImGzl6qP+2cwr5HNNzyxw9cihYgSlUCi1FNIQeAbr7DqKVl8iW
      JIfXufgBssuLNLW2AuyK6XXFziGSKUQNweLsMj7rrwZtaevAk9X187q+5fQrCsVmiUQAnT37
      ycnshoVlGuovYZJibxD6T63vFvn56+9TKRbwwy5Modgk4bc1NJ10QwOJmL0rV4MqdjahN4F0
      3aJnXyt6ulNZZCjqjtAjgKYbeJU8H713TjWBFHVH6AJYmBhm2TXo6GlXHmGKuiP0VsnS7AJz
      03OYdgoH2PlbKBS7iUjSohTyeUAnlb7zIje1HFoRJZG0SoYGLzE0eCOKohSKTRFJBKhUyoBO
      LHZnkyQVARRREkkEGDx3lpvj08olUlF3RCKATCbF3PyimghT1B1rBCClZHFhnkIhx1I2j+95
      lEtFZucXyS4tkCuUtlTI/NwUVy5eUxFAUXesGQZdmp2kKC2Ws/OYfoV5IwMU0fUEs8sztO8/
      RCa1+YHMzu4+5otToaZGdD2/mqlZzTYo7p41V4uu6ThOBd/3cT0fHTCsGG0tTaTSjWSSWxvF
      zy4tUSpXNmwC3bg6yOWh61t6bQgi19+9fIHv/+zSll9DsTdZEwEa2joxCwVMy8QXELctJEFG
      h2Sif8PMDnfCMg2a2to3nHUz7AQJKe7JJrW3PYNpaJTLZWWTWic2qfX8Wa5vk6pppNLp9S/S
      LV78AAvLBUrZCi6s6xbflElQkfdmk/rMI8ppUrF5Ilmg+cjjj3P18vCGzzc0t0dRDYXiNkIX
      wOTIVYZGJnDKgu5CATuVCrtIheKuCX3IJJlOE4/FyDQmyOe2NoyqUIRF6BGgsbWLvmKRrGPS
      09UWdnEKxaaIZNB84uZ13n7jQ7UhRlF3RNIJbus+yLce2x9qYfmSw0/euYpp6MRsA8s0sE2D
      mBUcx2yTmGlgWwaGoWMaGpZhBFakZuAnbFatSxV7h0gEUFqe4UcfD/Hcb3wlNJeYhG3yxLFu
      HM+n4vq4bnBbdjzyJYey4+G4Po4ncD1/xUvYq946nsDzq15fEnRdQ6N6qwW+vBqBz65lGJim
      TswyiFlmIB7zVjC1V/mhrRZVzS8YgrmRGpa59pyVY/2Wn69pGCsuNDUrUwgMvmvnGLq+cs7q
      GfHa8dpztTVl7lUiEcBirkzGYsPEWPcDw9Dp77p/+YVqJtlCBLdSsnLsC4HrCiquR8X1qx6+
      VWtRIfH9qmevECs+vjUv4No5pUpgFyLkLVvSmh8wBGXVjiFY6gEgCc7XPnUsJNVJH23Fu7hW
      rqyq2vNF4NUgbhmACyFXsvHVfIJXH/tCVo3Bg3ONqliklNiWQTJm0dmcoq0pSWdzmqZ0nMZU
      bOW8eicSATQ0NWPbOyvnv6ZpGJrGDvkeI0FISW09i5QS1xfkSw6zS0VmFgucHZpkIVtiuVBB
      SEncMonHTDqaUnQ0p+hoStGUidOUjtdN1AldAG6lSDoZ48KNaR4Ju7A9xvWJRd6+OMZv/uIx
      ErHwbbt1TQMtuPgXcmVaMgnaGpO0NSY53r92hE8IieP5FCsuc0tFphfynLs+vSIQz/NJxCxs
      y6CjOUV7U4rO5hRN6TjNmfiaJuJqpJTMLBZoziSwrXtvT4SfHXroMmeHp+lobMIBYmEXuIfI
      lxyWCxVcT5CI8IO9NrHIP7x6kW9+7ggnD3Sse46ua8Rtk7ht0pJJcKS3dc3zQgb+yqWKtxJB
      Lo3MMp8tkS1UqLg+tmmQiJmByJqSdLWkiVkG333lIg8d6uSrTx6+5/cSvkeY8MgXHUxDI55I
      3HFJtNoSeffIah9FX9WhjYKK4/HWxTHOHOshGQ8n8kgpcTxBxfGYXSoEIlkqML9cZGapiON6
      JOM2lqlj6DpN6TitjQma03Ea03EakjHSSZt03F7p+K9H6AIY/uQjhgsevZkM3SeP3jEtihKA
      4m6oid/zBRXXZylfZrlQZjFXZilfJluoUCg55Msuni+wLQNT17BMg9aGBC0NCZozifCbQMnG
      Nh492MB7r7/H/pNH1z1nZnKMmaUip44fCbs69x33yk8Ri8PYZ/41mlYfHbu9QDA0HQxPx2yT
      hlQMaFz3XCklflUsxYrLUi4QytxyMXwBdPTtB+DZrz677vPTk+Ogmezfvz/sqoSD8IM/Rd0S
      7BQMdgvW+iQrz0WRFuVOTI6N4GDT291JLpcjteNWjEoIdcOnIiyUTapiT7N7bFJrgUyt5VFs
      gtD7AL5b5uKlQXypcfjIMdKJ2zdFzk1PUPQM+no6t1aIlFTe/e9oZhz7sT+4xxor9hKhC2Bu
      bp5MUwvdnW3MzM2T7tl32znpTAOlxTxCBBvjPW/zyyZkvBlpxLb0v4q9SySd4HNvvcxw1uTr
      X/nCuoq7cukT7HQbA7371DyAIlIiWQyXzWWZG3XxNyjwyPEHo6iGQnEbkQjgyENP0veAG9pS
      aIViq0Rik/rqS69w7ea4GilX1B2RzN17no/nuio5rqLuCF0AhpXk9KlDxGM7bXZXsReIJAIk
      0ymW83nVB1DUHaF3gm9e+IgPLl1DM1K4qA0xivoidAHEMw1k0mkMK6U6wYq6I4Ll0Ac5pZmA
      tW5maIViO4lkHiDwCY5HUZRCsSkiEcD+vgESW3SXUSjCJBqj7PMf8PZ751RuUEXdEYkATNPA
      KamJMEX9sdYm1aswODjI3GIWgKnxcVwhuHLpPDPzC1wdHGRpYY6Cu7lCTNui6JTVPICi7lgj
      gKnJGQ4eOYJbLiClpFxaYmpqkXw+TyGfpeK4SCdP0dlcIb7rsry0uGETqJhbZDFb2OJbUCi2
      zppOcFt7GxM3bxKzTcbGxih7BhldkEqnyTQ0oQuBEc9gbzIXUqXi0NXdvWF7a24xi5CSxnRi
      yy6RpYrLJ9dnMA0D29SxTI14zMY2dWxTJ1E91nVtxzobKpfIkF0irXiC/v7+26/QrsDErq15
      a9mXY4k07mx+Q59gXXg43JtLpG5amJZNqeKxWKjgeD6Ou0ylmia94ni4nh9kbxYymJRbNTOn
      a9pKxmTbDDwFgtR+BrZlYptBSg27mhK9lhrdtqo+BHbNa8DA1nViMWvHZEjey0QyDJpKp7CW
      N2437R84dM9l2KbB50713vX5n7URzvVupT53PZ+KE/gMBN4DXjUTWYWKWwjyWzoeXtV3oOY/
      4PkCx7u90VcTml791a2lXq8ZdATRKzD0WH0/EOXa45hlBuYepr4iWnvV83eTPHavG4KELoDl
      uUlGJmaZH5ulIiVmnXzgn/XF21bgJBPlxsxaNuVARIGAKo5/u6iqEa1QdlYed7zAEMT1g/uB
      cAWeFxh+iFViXx3pVosQwNT1FYcd06gJzFgjRKsqtrhtcrS/jUzC3tEiCn1P8MTNa4xNzQPQ
      0NrJsUPrNLFWofYEbx9e1TGnFvVqgloRmSdWRFisuJy/MUOu6HByoJ0zx3vY15recWKIZFO8
      FAJB0BFR2aF3F0JIBkfneOvCGBNzOXo7GnniWDdH+1qrzjL1LYhIBPDmiz9kdM7iN57/2h2X
      QysB7Gwm5nK8fWGMofF5UnGbx47u4+HDXcRtsy7FEIkAxoeHmMtLTp+6c/ZnJYDdQ7ZQ4d3L
      45y7No2UcOpAO48e2UdbY7JuxBBNXqD33iAv0zx55vQdZ4OVAHYnjuvz8bVpPhicIFus0NfR
      yJMn9tPf1bjSGd8OIhkGNUybwtwigvBcIhX1jW0ZPHGsmyeOdSOkZGh0nrcvjPG3L5+nrSHB
      E8d7ODHQjhWxV3MkAhBSqATiihV0TeNoXxtH+wJjvcn5HGeHpnjpg+uYhsHpw508frSbVNwK
      XQyhC0BKiWGYGPru/O33RTA0aJtG5O1aISWO6xOzoi1bSknZ8e5bx3Zfa4Z9rRm+/tQD5IoV
      Pr42zf984SOyhQoPHerkzPEe2pqS6NUlDDUDvc/y/rpbQhfA1PUhNMsmX17ecCnETuZHbw4x
      MZ/jO998LPLM7O9dGufN86P8wVcfpqUhug1HI9PLfO+1i3zj6SMrv+L3i0wyxucf7OPzD/ZR
      cT2uji/yT29eYWIux4HuJh462MkrZ2/w0KEufumRgXsuL3QBZJobuHplgkdPHYpm80HEHO1r
      pSFlb4stQX9XE7NLxXVTzodJW2OSwz2tdLakQy0nZpmcHGjn5EA7QkrGZrK8c2mc6cUCL75/
      nQ8GJ+65jNBHgRanJ3DtBuLCIdnackfFqVEgRZSE/qM8PzbN9RsX+ekLL1PZ4JyZyTGGR+9d
      zQrFZonAKFuAruO7HoZl3jYSND05TjrTwFK+RE9Xh4oAikgJvQ+g6UGQMa31i+rc18PVwYtY
      qeZ7cohRKLaCcolU7Gl2j0ukQrEFIhiZlPieh+d5G84DCN/DW2f3lKI+EYVZKq//R8Ty+HZX
      5Z4JvQ8wcfMGY9PzmIZOsrFt3Q0xC3OzTC3kOHnsgZVN1Yr6RToFRGkR6eR3/HcVyWrQd157
      EZFo58wGq0Enx0aIZVppyiTJ5XKk0+FOsCjuB7tjdVcki+HicYvZbBGf9VeD2rEYlXIZvTG9
      khlCoYiCSATQ3NrGbDG7YWGt7V1RVEOhuI1IXCLffOsj3HJRJcdV1B0RTISZtLa10dCY2ZWr
      QRU7m/CbQJpOUyaO2djMJjMqKhShE3oTSNdNPCfH2bc+YpNJpRWK0Ak/M9zMKBUjRfdAUzQ9
      boViE4R+Tc6MTjI2Mo5ppykDapWPop6IZCKsXC4BOvH4nV2C1XJoRZREskvx8oXzXL5wNYqi
      FIpNEUmz/MixE0SkNYViU0RyVY5ev0q2WFImeYq6IxqXSN3n0uA1NRGmqDvWCED4XpD/3XFw
      nQqlcgXPdShXHITv4YutXcKzM5MMD46opRCKumNNH6AwM8WoC3MjNzjQ28NSroRpCBINbVii
      jDCS9PZ0brqQnv5DlLRF1QtQ1B2fuiYNNC+PlWzC911KjkNXZxdLCwvMzs0xMzuzpUKyS4ss
      Z3MbNoFGrg9x5drwll67hpSSQtmlVHFx3MBOaKdv1qg3pJT4vqDseORLzq74fNdEgGRbGwdF
      M3K/galBb5+kWC5x4MAAybgNW2zFJxJJWtpjG2aG1qw4cSkRQmzZJrVQdvnua4M4no8QEs8P
      utxCCHwh0DUNU9fQtSBTsa6BpkEqEcM0NGzTIJWwsQwdy9RJJ+KYBtXHg3N0DSzLAikwdA3L
      MqF6Eew0m1TQqnZHHp6QFEoOuWKFQtllMV8mV6hQqngUqj8ovgTQsEwDvZrpo1iqcObYPh49
      0kXMMnakTWokE2Fvv/4qC8sVfvkbX2G9JH6Lc1NUpE1Xe0toE2G+EPh+kFjV9wWuf8v3ynGr
      LpBu4PjoVJ0gK0711vUoOz5SSlxPIJFIIfFE8GWvNp0zDR1D1zENDdM0MPXAm9jQNWJW1XzO
      NquOjqtcHy2j6ml8y+0xZgcJYHVNu3VbO67eD96bvOXt5fosFyrkihXyRYdc9cIull3KjkfJ
      8fCrPw6WaQRCNnVScZuGVIxMMkZD0iadjJFOWMQtk0TMIm6btyWjLZZd3jw/yvuDE3S3ZXjm
      dD99nY11Y37xWXi+4JWzN6IRQH55gcHBER4888i6AljNTp4JFkKuZIv2/EBw3qr7tYvU8QQV
      JxhwqFSbaxXXw3X9tc6PNV9jX+CLwE5VSIEQEiFrFqtyxZ/Yqt5mkjZN6TipuE1jKkYmaROP
      mcRtk4Rt3ZV96maQUnJ9YpFXPxphPlvkqRP7eeJYD4lYfa7+ml0q8r3XLnKopyV8AcyOD3Pp
      2k1KBZenv/R5GmKfvRxiJwtAEUSFdy+N8+6lcbpa0jzzcP1EBcf1+cm7V7k6vsBzzxynv7Mp
      fAHMT41xdSRIn9HR3c+B3s/e/qgEsDuQUjI8tcQrZ4eZXy7x+LFunjrRQyIW/a4QKSXnrs/w
      47eu8MWHB3jyRA9GtR8TSRNobnKMnGsw0LdP2aTuQYpll/cHJ3j30jhtTUmeOT3AQFc0UWF2
      qcB3X7lIJhXjuWeOk/yUACNKi/ICl64V+d0/em5X9wEUn42UktGZLC+fvcHsYoEnjvXw1Mn9
      xO3731eoNXeGxoLmzkBX07rnRSKAsZsjtHR0kYjHVARQAFCsuLx/eYL3Lk/Q1pjkmdP99N+H
      qCCl5JPrM/zft4d45uF+zhzrwTA2noKNRABD597l0kSRX/3qF5VNqmINUkrGZrO8cnaYmcUC
      jx/t3nJUmF0q8N1XL9KUjvMbv3jstubOekQyTjW/XMT0KhsmxlLsXTRNo7ejkd//ymmKFZcP
      Bif5Lz94j9aGJF843cdAV9Mdo4Lj+fzknatcG1/guWdO0NfZePflRxEBLnx8lmzO4fHPP3nH
      zBBbjQC1txH1cNt2lVsrW8K2Gk2HgZSS8bkcL31wg+nFPGeO9fDUif3EYyZSgkSuNKVvNXcG
      OHO8e2V0524JXQC+W2Fs5Drnrk7xja/+Uih9ACkl//jzQWzL4OtPPbD1ym6B1z4aYXwuy/PP
      nor8Qrw4PMub50d5/kunSCejNcqLiiAqTPDupQlaGxI8faqXNz+5SV9nE4Ojc5tq7qxH6E2g
      scELXJxcIGZYOMCddwVvDdPUMT+jsxMWprE95a4ue5cFgDUkYxa/+FA/n3+wj/G5HC++f52L
      I3OMz+X4/a+c3lRzZz3CjwCew9xCjmTCJp3JqFEgxT1TcX1MQ9t0c2c9Qo8A40ODjJVgfzqJ
      lckQD7tAxa4ndh/XMoUeu+1YA0cOdHFxcOOsEDOTY1wcvBZ2VRSK24hkFOizmJ4cRzcsjFiS
      lsa0agIpImXb16t27uthfPQGnuPTlEkqm1RFpCibVMWeRtmkKvY0oTeBhOdyY/gGntDoHziw
      7hqPxblpip5OT1d72NVR7HA8z+fa+fd4fxzK92FWKfzs0NNT+Jh0dTQxNTXNQF/PbefEE0my
      C1mEEKoPoNiQq+OL/L83P+Y5vs+X+84gTzx3z68ZugC6enqZeftV3h6d5pd/6el1zxkZvk6s
      oR1d19F1HdPc9r65oo7Ilxy++8oFhJT8y2/+AunlZoyWQ2iJe28qR3KlZXPLTI8LPNZfDXrs
      5OkoqqHYYUgpef3cTd48P8qv/cJRTgxUm8jpx+5bGdFkhz71GB295e0fc1XsGMZms/zdyxc4
      2tvKn3/7aSwznIX0oV+TvlvklRdfo733AAePHQ67OMUOp1Rx+cefDzK3XOQPvnKatqZwh8Qj
      +VEWUuA5jsoOrdgQKSUfXpnkn9+/zpcfP8i3v3Qykj0WoQvAsJKcPvUAWTd5x5Wgir3J3FKR
      v335PG2NSf7sW09Gmjolkghg2SZTYzNKAIo1eL7gJ+9cZWhsnt965gR9HQ2R76wLf0PM5U84
      f3UMTU+qPcGKFS7fnOMHr1/mc6d6+bffevK+rO3fCqELwLTjxCwbw9qdW/YUmyNfcvi7l89j
      6Dp//OuP05Te3h0i4U+EHXyAR+MpwLxjUizF7sUXgp+fG+XN86M898xxHtjfUhf5QiPpAywu
      zANxuro7oihOUWeMzWT5Py+d5+SBdv798+GN6W+FiIyyy8RisbtSvNoQs3tYPab//LOnaGus
      v2XukUSAix++Q8Vs4syZ06oTvAeQUvLBlUl++u41vvrk4cjG9LdCJAJIpZJUiiAIbxQoV6zw
      P370Ib4vV1xPjKpbSzJmkorbpBIWybhNKm6RTtgkYiYxyyRmG8QtE9sy6vaL2inMLhX43y+e
      Z19rmj//9tOhJL69n6ypnVsuMDw6RWtLA9miR3tLA6lU6p4LEdJndmEh1B34mWSMf/c7TwdG
      blXLIF8IPE9QrLgUyi6FkkOh7LKQKzE6sxzYBrk+TtUCqebIYlVz7QR+WBoxywxEk7RJ2Cbp
      ZIxkzCSTiBGzDWKWGVgfWcaeFZHnC1545ypXbs7xO186yf726Mf0t8IaARQLeVxfkM/nkZpN
      Npu9LwLQdYNyqbBhBCgX87iYZJL3PiSmaVrgz7UqWVXjJofaxGoB+YGHWKHskq8KqFRxmVsq
      Uqy4lCsejufhemLFf8yrGbNpgTeYrmnoho6hB7lsYpZB3DZJxi1iViCgeMysPguDVxQAAAI+
      SURBVG6RsINoZK32EKse1yOXR+b43s8u8cWH+/mz33lq28b0t8IaAVh2DJwCMtNBIZsn3d5y
      XwpxHWfFSG49Jqen8YVG6sAAvu/jOA5wuzPk3R6vzte51WNd19ER2AbELYt03KCzKb6h++F6
      x0JI0DRczwuO0W4Z8HmCcsWhVAnu5/JF5tzA5K5UcXGrBn4Vx8Ot+otVXA8kmFUhmEYQcWr7
      KGoRKGGbxOygeRe3DeIxi/jKc1bVwE/HMnTManPRNPRNf66Fssc//OwyUvh85xsP05CK4bku
      3h0+17v9/O7n8Xr10TTtUzapmSZOPPRwcOf2jVtbxo4n6N7fvWGHQ/oevjTRNA1d1zGM+vil
      01f9ktWOa3XczLFtmSvH92vQLTDKu2WWJ0TgYOl4/opXcrESOF6WKy5LuTIV16PiBm6YNWE5
      tVvPX7koak6Uhh5ELaDqbmkQM4PI5fmCobEFnv/lU/R3Nm5qmcv9+lzXO97o9Tcikh5KqexQ
      yZXwYN3s0P0DBxHoKx6u9SKAeiasj6hm+7oiMCFXmoSBuAIRSQm/+YXjddssu1si2A/gcPDI
      CczBaxsKwDAtNTxaJ2iahqFpbFO+38gJ/W2ODF3gg4/PU/BdJkbHwy5OodgUoQug/8hJulrS
      WIkkPZ2dYRenUGyK0AVgmDa4JYp5F6POJ0UUe49IWnpWzGYxu6za+Yq6IxIBLC1k6e3tVnuC
      FXVHJAJoaWtlbn5ebYlU1B2RCCCby+OXy/hRFKZQbIL/D8dNmrmXLeF/AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
